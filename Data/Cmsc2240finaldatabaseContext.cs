// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using JaxPelzerFinal.Models;

#nullable disable

namespace JaxPelzerFinal.Data
{
    public partial class Cmsc2240finaldatabaseContext : DbContext
    {
        public Cmsc2240finaldatabaseContext()
        {
        }

        public Cmsc2240finaldatabaseContext(DbContextOptions<Cmsc2240finaldatabaseContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Courselinking> Courselinkings { get; set; }
        public virtual DbSet<Schooluser> Schoolusers { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Course>(entity =>
            {
                entity.ToTable("courses");

                entity.Property(e => e.CourseId)
                    .ValueGeneratedNever()
                    .HasColumnName("courseID");

                entity.Property(e => e.CourseCredits).HasColumnName("courseCredits");

                entity.Property(e => e.CourseName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("courseName");
            });

            modelBuilder.Entity<Courselinking>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("courselinking");

                entity.Property(e => e.CourseId).HasColumnName("courseID");

                entity.Property(e => e.UserId).HasColumnName("userID");

                entity.HasOne(d => d.Course)
                    .WithMany()
                    .HasForeignKey(d => d.CourseId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("courseID");

                entity.HasOne(d => d.User)
                    .WithMany()
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("userID");
            });

            modelBuilder.Entity<Schooluser>(entity =>
            {
                entity.HasKey(e => e.UserId)
                    .HasName("PK__schoolus__1788CC4C96641B5E");

                entity.ToTable("schoolusers");

                entity.Property(e => e.UserId).ValueGeneratedNever();

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.Fname)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FName");

                entity.Property(e => e.Lname)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LName");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("password");

                entity.Property(e => e.Role)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("role");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}