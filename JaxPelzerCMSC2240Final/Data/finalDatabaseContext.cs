// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using JaxPelzerCMSC2240Final.Models;

namespace JaxPelzerCMSC2240Final.Data
{
    public partial class finalDatabaseContext : DbContext
    {
        public finalDatabaseContext()
        {
        }

        public finalDatabaseContext(DbContextOptions<finalDatabaseContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<CourseLinking> CourseLinkings { get; set; }
        public virtual DbSet<Student> Students { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Course>(entity =>
            {
                entity.ToTable("courses");

                entity.Property(e => e.CourseId)
                    .ValueGeneratedNever()
                    .HasColumnName("courseID");

                entity.Property(e => e.CourseCredits).HasColumnName("courseCredits");

                entity.Property(e => e.CourseName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("courseName");
            });

            modelBuilder.Entity<CourseLinking>(entity =>
            {
                entity.HasKey(e => e.LinkId)
                    .HasName("PK__courseLi__6C34E1D5FF22C50C");

                entity.ToTable("courseLinking");

                entity.Property(e => e.LinkId)
                    .ValueGeneratedNever()
                    .HasColumnName("Link_Id");

                entity.Property(e => e.CourseId).HasColumnName("courseID");

                entity.Property(e => e.StuId).HasColumnName("stuID");

                entity.HasOne(d => d.Course)
                    .WithMany(p => p.CourseLinkings)
                    .HasForeignKey(d => d.CourseId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_courses");

                entity.HasOne(d => d.Stu)
                    .WithMany(p => p.CourseLinkings)
                    .HasForeignKey(d => d.StuId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_students");
            });

            modelBuilder.Entity<Student>(entity =>
            {
                entity.HasKey(e => e.StuId)
                    .HasName("PK__students__AEC9BFAF49BDAC0C");

                entity.ToTable("students");

                entity.Property(e => e.StuId)
                    .ValueGeneratedNever()
                    .HasColumnName("stuID");

                entity.Property(e => e.Fname)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FName");

                entity.Property(e => e.Lname)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("LName");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}