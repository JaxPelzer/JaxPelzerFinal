// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using JaxPelzerCMSC2240Final.Models;

namespace JaxPelzerCMSC2240Final.Data
{
    public partial class finalDatabaseContext : DbContext
    {
        public finalDatabaseContext()
        {
        }

        public finalDatabaseContext(DbContextOptions<finalDatabaseContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Driver> Drivers { get; set; }
        public virtual DbSet<Infraction> Infractions { get; set; }
        public virtual DbSet<InfractionDriverLink> InfractionDriverLinks { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Vehicle> Vehicles { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Driver>(entity =>
            {
                entity.HasIndex(e => e.Ssn, "UQ__Drivers__CA1E8E3C7ACEE700")
                    .IsUnique();

                entity.Property(e => e.DriverId).HasColumnName("driverID");

                entity.Property(e => e.FName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("fName");

                entity.Property(e => e.LName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("lName");

                entity.Property(e => e.Ssn)
                    .IsRequired()
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("SSN");
            });

            modelBuilder.Entity<Infraction>(entity =>
            {
                entity.Property(e => e.InfractionId).HasColumnName("infractionID");

                entity.Property(e => e.InfractionCost)
                    .HasColumnType("decimal(19, 2)")
                    .HasColumnName("infractionCost");

                entity.Property(e => e.InfractionDesc)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("infractionDesc");
            });

            modelBuilder.Entity<InfractionDriverLink>(entity =>
            {
                entity.HasKey(e => e.VehicleId)
                    .HasName("PK__Infracti__5B9D25D271627344");

                entity.ToTable("InfractionDriverLink");

                entity.Property(e => e.VehicleId).HasColumnName("vehicleID");

                entity.Property(e => e.DriverId).HasColumnName("driverID");

                entity.Property(e => e.InfractionId).HasColumnName("infractionID");

                entity.HasOne(d => d.Driver)
                    .WithMany(p => p.InfractionDriverLinks)
                    .HasForeignKey(d => d.DriverId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InfractionDriverLink_driverID");

                entity.HasOne(d => d.Infraction)
                    .WithMany(p => p.InfractionDriverLinks)
                    .HasForeignKey(d => d.InfractionId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_InfractionDriverLink_infractionID");
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.HasIndex(e => e.UserName, "UQ__Users__66DCF95CD39A026A")
                    .IsUnique();

                entity.Property(e => e.UserId).HasColumnName("userID");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("password");

                entity.Property(e => e.Role)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("role");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("userName");
            });

            modelBuilder.Entity<Vehicle>(entity =>
            {
                entity.Property(e => e.VehicleId).HasColumnName("vehicleID");

                entity.Property(e => e.DriverId).HasColumnName("driverID");

                entity.Property(e => e.LiscencePlateNumber)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("liscencePlateNumber");

                entity.Property(e => e.Make)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("make");

                entity.Property(e => e.Model)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("model");

                entity.HasOne(d => d.Driver)
                    .WithMany(p => p.Vehicles)
                    .HasForeignKey(d => d.DriverId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_driverID");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}